doc 
    Title: "Meta Types"
    Purpose: "Values describing Aha! types"
    Package: "Aha! Base Library"
    Author: "Roman Movchan, Melbourne, Australia"
    Created: "2013-08-10"
end

type String: [character] "alias for character array type"

type DataType: opaque "meta-type"
type Attribute: [ id: [ name: String | op: String ] "attribute name or operator" datatype: DataType "attribute type" ] "composite's attribute descriptor"
type Variant: [Attribute] "variant of a composite"
type TypeInfo:
    [ 
        integerType: "integer" |
        characterType: "character" |
        arrayType: DataType "array" |
        compositeType: [Variant] "composite type" |
        functionType: [ param: [ single: DataType | first: DataType second: DataType ] result: DataType ] "function" |
        objectType: [ state: DataType actions: [[ name: String param: DataType ]] ] "object or sequence" |
        opaqueType: "opaque"
    ] "type information"

export 
    [
        TypeInfo: { DataType -> TypeInfo } "type info for given type"
        Nesting: { DataType -> integer } "nesting level for given type; 0 for a simple type"
        Void: DataType "void meta-type"
        Integer: DataType "integer meta-type"
        Character: DataType "character meta-type"
        Array: { DataType -> DataType } "array of given type meta-type"
        Seq: { DataType -> DataType } "sequence of given type meta-type"
        Com: { [Variant] -> DataType } "composite meta-type"
        Function: { [ param: [ single: DataType | first: DataType second: DataType ] result: DataType ] -> DataType } "function meta-type"
        Object: { [ state: DataType actions: [[ name: String param: DataType ]] ] -> DataType } "object meta-type"
        (DataType <= DataType): { DataType, DataType } "covariance: does every value of first type belong to second?"
        (DataType >= DataType): { DataType, DataType } "contravariance: reverse to <="
        (DataType = DataType): { DataType, DataType } "are types equivalent (i.e.both <= and >=)?"
    ]
